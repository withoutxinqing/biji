1.计算机存储英文字符 
	ASCII：总共有128个，对所有的英文字符及标点符号进行了编码。 Hello ――> 72102108108111
	Latin-1：总共有256个，兼容ASCII码，同事对欧洲符号进行了编码。MySQL默认就使用这种编码。
①.如何存储中文字符
	GB2312： 对常用的6千多汉字进行了编码，兼容ASCII码
	GBK：对2万多的汉字进行了编码，兼容GB2312
	BIG5：台湾繁体字编码，兼容ASCII
	Unicode：对世界上主流的语言常用的字符进行了编码，兼容ASCII，不兼容GBK,GB2312,BIG5等系列。
		具体分为UTF-8，UTF-16，UTF-32等存储方案
②.解决MySQL存储中文乱码
	sql脚本文件存储的编码utf8
	客户端连接服务器端使用的编码为utf8
	服务的创建数据库存储使用的编码为utf8

2.MySQL中的列类型
	创建数据表的时候，指定的列可以存储的数据类型。
		CREATE TABLE xxx(表名称)（bid  列类型）；
①.数值类型――引号可加可不加
	TINYINT  微整型 占1个字节 范围-128~127
 	SMALLINT  小整型 占2个字节  范围-32768~32767
	INT  整型 占4个字节 范围-2147483648~2147483647
	BIGINT  大整型 占8个字节
	FLOAT  单精度浮点型 占4个字节 范围3.4e38范围比INT大的多 可能产生计算误差
               DOUBLE  双精度浮点型 占8个字节 范围比INT大得多
	DECIMAL（M,D）  定点小数 不会产生计算误差 M代表总的有效位数 D代表小数点后的有效位数4
	BOOL  布尔型 只有2个结果 TRUE/1,FALSE/0    TRUE和FALSE不能添加引号   真正存储数据的时候，会使用TINYINT
②.日期时间类型――必须添加引号
	DATE   日期型  ‘2018-12-31’
	TIME   时间型   ‘14:22:30’
	DATETIME   日期时间型   ‘2018-12-31  14:22:30’
③.字符串类型――必须添加引号
	VARCHAR(M)   变长字符串   不会产生空间浪费 操作速度相对较慢   M的最大值是65535
	CHAR(M)   定长字符串   可能产生空间浪费 操作速度较快   M的最大值是255  用于存储一个人的手机号码，身份证号等固定长度的字符。
	TEXT(M)  大型变长字符串   最多可以存4G

3.列约束 
	MySQL 可以对插入的数据进行特定的验证，只有满足条件才允许插入到数据表中，否则被认为是非法的插入
	例如：一个人的性别只能是男或者女，一个人的年龄在0-100之间，
①主键约束――PRIMARY KEY 
	声明了主键列上的值不能出现重复，表中查询的记录会按照主键由小到大进行排序――加快查找的速度；通常主键添加到编号列中
	注意：一个表中只能有一个主键（PRIMARY KEY）
②唯一约束――UNIQUE 
	声明了唯一约束的列上不能插入重复的值，允许插入NULL，而且允许插入多个NULL。
	// NULL 表示空，在插入数据暂时无法确定要保存的数据。
	例如：无法确定员工的姓名，工资。 //

创建 xz.sql  数据库xz  编码UTF8 进入
 创建保存笔记本分类的表xz_laptop_family(fid.fname.laptopCount笔记本数量)
	10 联想  2   20 戴尔 2  30小米 3
创建笔记本数据表xz_laptop  (lid . title(标题),price(价格)，spec（规格），detail（详细介绍），shelfTime（上架时间）isOnsale（是否在线）familyld(所属分类编码))
   7条




































